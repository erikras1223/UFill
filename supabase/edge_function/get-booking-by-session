import { corsHeaders } from "./cors.ts";
import { createClient } from 'npm:@supabase/supabase-js@2';
const supabase = createClient(Deno.env.get('SUPABASE_URL'), Deno.env.get('SUPABASE_SERVICE_ROLE_KEY'));
Deno.serve(async (req)=>{
  if (req.method === "OPTIONS") {
    return new Response("ok", {
      headers: corsHeaders
    });
  }
  try {
    const { sessionId } = await req.json();
    if (!sessionId) {
      throw new Error("Session ID is required.");
    }
    const { data: booking, error: bookingError } = await supabase.from('bookings').select(`
        *,
        customers!inner(*),
        stripe_payment_info!inner(*)
      `).eq('stripe_payment_info.stripe_checkout_session_id', sessionId).single();
    if (bookingError || !booking) {
      console.error("Error fetching booking by session ID:", bookingError);
      const errorMessage = bookingError ? bookingError.message : "Could not find a booking for the provided session.";
      throw new Error(errorMessage);
    }
    return new Response(JSON.stringify({
      booking
    }), {
      headers: {
        ...corsHeaders,
        "Content-Type": "application/json"
      },
      status: 200
    });
  } catch (error) {
    console.error("Get booking by session error:", error.message);
    return new Response(JSON.stringify({
      error: error.message
    }), {
      headers: {
        ...corsHeaders,
        "Content-Type": "application/json"
      },
      status: 500
    });
  }
});
